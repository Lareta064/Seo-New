//–ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
section.highlight
	
	.highlight-text *SEO –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ ‚Äî<br>—ç—Ç–æ —Ä–∞–±–æ—Ç–∞ –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É
	script.
		document.querySelectorAll('.highlight').forEach(section => {
			//-  const text = section.querySelector('.highlight-text');

			//- let targetX = 0;
			//- let targetY = 0;
			//- let currentX = 0;
			//- let currentY = 0;

			//- // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ç–æ—á–∫—É (–∫–∞–∫ –≤ CSS)
			//- const rect = text.getBoundingClientRect();
			//- currentX = targetX = rect.width * 0.4;
			//- currentY = targetY = rect.height * 0.5;

			//- // –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ —Ü–µ–ª–µ–≤–æ–π —Ç–æ—á–∫–µ
			//- function animate() {
			//- const lerp = 0.1; // –ø–ª–∞–≤–Ω–æ—Å—Ç—å (0.1 ‚Äî –º—è–≥–∫–æ, 1 ‚Äî –º–≥–Ω–æ–≤–µ–Ω–Ω–æ)
			//- currentX += (targetX - currentX) * lerp;
			//- currentY += (targetY - currentY) * lerp;

			//- text.style.setProperty('--x', `${currentX}px`);
			//- text.style.setProperty('--y', `${currentY}px`);

			//- requestAnimationFrame(animate);
			//- }

			//- animate(); // –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é

			//- section.addEventListener('mousemove', (e) => {
			//- const rect = text.getBoundingClientRect();
			//- targetX = e.clientX - rect.left;
			//- targetY = e.clientY - rect.top;
			//- });
			const text = section.querySelector('.highlight-text');

			let targetX = 0;
			let targetY = 0;
			let currentX = 0;
			let currentY = 0;

			const rect = text.getBoundingClientRect();
			currentX = targetX = rect.width * 0.4;
			currentY = targetY = rect.height * 0.5;

			function animate() {
			const lerp = 0.1;
			currentX += (targetX - currentX) * lerp;
			currentY += (targetY - currentY) * lerp;
			text.style.setProperty('--x', `${currentX}px`);
			text.style.setProperty('--y', `${currentY}px`);
			requestAnimationFrame(animate);
			}

			animate();

			// üñ±Ô∏è –î–µ—Å–∫—Ç–æ–ø
			section.addEventListener('mousemove', (e) => {
			const rect = text.getBoundingClientRect();
			targetX = e.clientX - rect.left;
			targetY = e.clientY - rect.top;
			});

			// ü§≥ –ú–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
			section.addEventListener('touchmove', (e) => {
			const touch = e.touches[0];
			if (!touch) return;

			const rect = text.getBoundingClientRect();
			targetX = touch.clientX - rect.left;
			targetY = touch.clientY - rect.top;
			}, { passive: true });

			section.addEventListener('touchstart', (e) => {
			const touch = e.touches[0];
			if (!touch) return;

			const rect = text.getBoundingClientRect();
			targetX = touch.clientX - rect.left;
			targetY = touch.clientY - rect.top;
			}, { passive: true });
		});